FILE fqName:foo.bar fileName:/simple.kt
  CLASS INTERFACE name:Foo modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Foo
    CLASS OBJECT name:Boo modality:FINAL visibility:public superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:foo.bar.Foo.Boo
      CONSTRUCTOR visibility:private <> () returnType:foo.bar.Foo.Boo [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS OBJECT name:Boo modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
        VALUE_PARAMETER name:other index:0 type:kotlin.Any?
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.Unit
    annotations:
      DebugLog
    BLOCK_BODY
      CALL 'public final fun println (message: kotlin.Any?): kotlin.Unit declared in kotlin.io' type=kotlin.Unit origin=null
        message: STRING_CONCATENATION type=kotlin.String
          CONST String type=kotlin.String value="⇢ foo.bar.box (simple.kt:6) ("
          CONST String type=kotlin.String value=")"
      VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.time.TimeMark [val]
        CALL 'public abstract fun markNow (): kotlin.time.TimeMark declared in kotlin.time.TimeSource' type=kotlin.time.TimeMark origin=null
          $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Monotonic modality:FINAL visibility:public superTypes:[kotlin.time.TimeSource.WithComparableMarks]' type=kotlin.time.TimeSource.Monotonic
      TRY type=kotlin.Unit
        try: BLOCK type=kotlin.Unit origin=null
          WHILE label=null origin=WHILE_LOOP
            condition: CONST Boolean type=kotlin.Boolean value=true
            body: BLOCK type=kotlin.Unit origin=null
              WHEN type=kotlin.Unit origin=IF
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: BREAK label=null loop.label=null
          CALL 'public final fun println (message: kotlin.Any?): kotlin.Unit declared in kotlin.io' type=kotlin.Unit origin=null
            message: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="⇠ foo.bar.box ["
              CALL 'public abstract fun elapsedNow (): kotlin.time.Duration declared in kotlin.time.TimeMark' type=kotlin.time.Duration origin=null
                $this: GET_VAR 'val tmp_0: kotlin.time.TimeMark declared in foo.bar.box' type=kotlin.time.TimeMark origin=null
              CONST String type=kotlin.String value="]"
        CATCH parameter=val t: kotlin.Throwable declared in foo.bar.box
          VAR CATCH_PARAMETER name:t type:kotlin.Throwable [val]
          BLOCK type=kotlin.Nothing origin=null
            CALL 'public final fun println (message: kotlin.Any?): kotlin.Unit declared in kotlin.io' type=kotlin.Unit origin=null
              message: STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value="⇠ foo.bar.box ["
                CALL 'public abstract fun elapsedNow (): kotlin.time.Duration declared in kotlin.time.TimeMark' type=kotlin.time.Duration origin=null
                  $this: GET_VAR 'val tmp_0: kotlin.time.TimeMark declared in foo.bar.box' type=kotlin.time.TimeMark origin=null
                CONST String type=kotlin.String value="] = "
                GET_VAR 'val t: kotlin.Throwable declared in foo.bar.box' type=kotlin.Throwable origin=null
            THROW type=kotlin.Nothing
              GET_VAR 'val t: kotlin.Throwable declared in foo.bar.box' type=kotlin.Throwable origin=null
